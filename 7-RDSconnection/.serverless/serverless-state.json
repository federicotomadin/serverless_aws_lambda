{
  "service": {
    "service": "RDSconnection",
    "serviceObject": {
      "name": "RDSconnection"
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs12.x",
      "lambdaHashingVersion": "20201221",
      "vpc": {
        "securityGroupIds": [
          "sg-0e4b79a9df071750a"
        ],
        "subnetIds": [
          "subnet-019d6c9ee81874df1",
          "subnet-0171b26d142e662b5",
          "subnet-027f0bc4ab1959995",
          "subnet-0a39ee4236cf5741f",
          "subnet-0e3e0092806791c49",
          "subnet-0f3a94a7f4efedfa5"
        ]
      },
      "stage": "dev",
      "region": "us-east-1",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "RDSTestconnectionLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/RDSconnection-dev-RDSTestconnection"
            }
          },
          "RDScreateLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/RDSconnection-dev-RDScreate"
            }
          },
          "RDSupdateLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/RDSconnection-dev-RDSupdate"
            }
          },
          "RDSdeleteLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/RDSconnection-dev-RDSdelete"
            }
          },
          "RDSselectLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/RDSconnection-dev-RDSselect"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "RDSconnection",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/RDSconnection-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/RDSconnection-dev*:*:*"
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "RDSconnection",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              },
              "ManagedPolicyArns": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
                    ]
                  ]
                }
              ]
            }
          },
          "RDSTestconnectionLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/RDSconnection/dev/1667180880605-2022-10-31T01:48:00.605Z/RDSconnection.zip"
              },
              "Handler": "handlers/handlerRDSTestconnection.RDSTestconnection",
              "Runtime": "nodejs12.x",
              "FunctionName": "RDSconnection-dev-RDSTestconnection",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "VpcConfig": {
                "SecurityGroupIds": {
                  "$ref": "$[\"service\"][\"provider\"][\"vpc\"][\"securityGroupIds\"]"
                },
                "SubnetIds": {
                  "$ref": "$[\"service\"][\"provider\"][\"vpc\"][\"subnetIds\"]"
                }
              }
            },
            "DependsOn": [
              "RDSTestconnectionLogGroup"
            ]
          },
          "RDScreateLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/RDSconnection/dev/1667180880605-2022-10-31T01:48:00.605Z/RDSconnection.zip"
              },
              "Handler": "handlers/handlerRDScreate.RDScreate",
              "Runtime": "nodejs12.x",
              "FunctionName": "RDSconnection-dev-RDScreate",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "VpcConfig": {
                "SecurityGroupIds": {
                  "$ref": "$[\"service\"][\"provider\"][\"vpc\"][\"securityGroupIds\"]"
                },
                "SubnetIds": {
                  "$ref": "$[\"service\"][\"provider\"][\"vpc\"][\"subnetIds\"]"
                }
              }
            },
            "DependsOn": [
              "RDScreateLogGroup"
            ]
          },
          "RDSupdateLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/RDSconnection/dev/1667180880605-2022-10-31T01:48:00.605Z/RDSconnection.zip"
              },
              "Handler": "handlers/handlerRDSupdate.RDSupdate",
              "Runtime": "nodejs12.x",
              "FunctionName": "RDSconnection-dev-RDSupdate",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "VpcConfig": {
                "SecurityGroupIds": {
                  "$ref": "$[\"service\"][\"provider\"][\"vpc\"][\"securityGroupIds\"]"
                },
                "SubnetIds": {
                  "$ref": "$[\"service\"][\"provider\"][\"vpc\"][\"subnetIds\"]"
                }
              }
            },
            "DependsOn": [
              "RDSupdateLogGroup"
            ]
          },
          "RDSdeleteLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/RDSconnection/dev/1667180880605-2022-10-31T01:48:00.605Z/RDSconnection.zip"
              },
              "Handler": "handlers/handlerRDSdelete.RDSdelete",
              "Runtime": "nodejs12.x",
              "FunctionName": "RDSconnection-dev-RDSdelete",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "VpcConfig": {
                "SecurityGroupIds": {
                  "$ref": "$[\"service\"][\"provider\"][\"vpc\"][\"securityGroupIds\"]"
                },
                "SubnetIds": {
                  "$ref": "$[\"service\"][\"provider\"][\"vpc\"][\"subnetIds\"]"
                }
              }
            },
            "DependsOn": [
              "RDSdeleteLogGroup"
            ]
          },
          "RDSselectLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/RDSconnection/dev/1667180880605-2022-10-31T01:48:00.605Z/RDSconnection.zip"
              },
              "Handler": "handlers/handlerRDSselect.RDSselect",
              "Runtime": "nodejs12.x",
              "FunctionName": "RDSconnection-dev-RDSselect",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "VpcConfig": {
                "SecurityGroupIds": {
                  "$ref": "$[\"service\"][\"provider\"][\"vpc\"][\"securityGroupIds\"]"
                },
                "SubnetIds": {
                  "$ref": "$[\"service\"][\"provider\"][\"vpc\"][\"subnetIds\"]"
                }
              }
            },
            "DependsOn": [
              "RDSselectLogGroup"
            ]
          },
          "RDSTestconnectionLambdaVersionY311Bx4qGCATXzb5iQftW0YAqwdxZT6FLwKQj4uEUo": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "RDSTestconnectionLambdaFunction"
              },
              "CodeSha256": "OmMaMiZNqQKkAD1RgFeU5xOhT3UkPQJc4s0hUUK1JGo="
            }
          },
          "RDScreateLambdaVersionCo0beIkw66kGqpAjRybSqS7Fh9AiNsMOzVIF1ds3gM": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "RDScreateLambdaFunction"
              },
              "CodeSha256": "OmMaMiZNqQKkAD1RgFeU5xOhT3UkPQJc4s0hUUK1JGo="
            }
          },
          "RDSupdateLambdaVersionbWbjE1tmhlVmsVcMQg1AJjQKgwKkmsWNzV8SVms": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "RDSupdateLambdaFunction"
              },
              "CodeSha256": "OmMaMiZNqQKkAD1RgFeU5xOhT3UkPQJc4s0hUUK1JGo="
            }
          },
          "RDSdeleteLambdaVersionw3SIjlyBor3BRbZOO14TQFRGeXE4JeWfe7vF93Cgds": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "RDSdeleteLambdaFunction"
              },
              "CodeSha256": "OmMaMiZNqQKkAD1RgFeU5xOhT3UkPQJc4s0hUUK1JGo="
            }
          },
          "RDSselectLambdaVersionsmpGPteDirfVVcAKGQnOx54IgtRGq3KWKMuBWOX4Q": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "RDSselectLambdaFunction"
              },
              "CodeSha256": "OmMaMiZNqQKkAD1RgFeU5xOhT3UkPQJc4s0hUUK1JGo="
            }
          },
          "HttpApi": {
            "Type": "AWS::ApiGatewayV2::Api",
            "Properties": {
              "Name": "dev-RDSconnection",
              "ProtocolType": "HTTP"
            }
          },
          "HttpApiStage": {
            "Type": "AWS::ApiGatewayV2::Stage",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "StageName": "$default",
              "AutoDeploy": true,
              "DefaultRouteSettings": {
                "DetailedMetricsEnabled": false
              }
            }
          },
          "RDSTestconnectionLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "RDSTestconnectionLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationRDSTestconnection": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"RDSTestconnectionLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0"
            }
          },
          "HttpApiRouteGetRdsconnectionRdstestconnection": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /RDSconnection/RDSTestconnection",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationRDSTestconnection"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationRDSTestconnection"
          },
          "RDScreateLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "RDScreateLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationRDScreate": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"RDScreateLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0"
            }
          },
          "HttpApiRoutePostRdsconnectionRdscreate": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "POST /RDSconnection/RDScreate",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationRDScreate"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationRDScreate"
          },
          "RDSupdateLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "RDSupdateLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationRDSupdate": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"RDSupdateLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0"
            }
          },
          "HttpApiRoutePutRdsconnectionRdsupdateIdVar": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "PUT /RDSconnection/RDSupdate/{id}",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationRDSupdate"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationRDSupdate"
          },
          "RDSdeleteLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "RDSdeleteLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationRDSdelete": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"RDSdeleteLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0"
            }
          },
          "HttpApiRouteDeleteRdsconnectionRdsdeleteIdVar": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "DELETE /RDSconnection/RDSdelete/{id}",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationRDSdelete"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationRDSdelete"
          },
          "RDSselectLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "RDSselectLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationRDSselect": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"RDSselectLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0"
            }
          },
          "HttpApiRouteGetRdsconnectionRdsselectIdVar": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /RDSconnection/RDSselect/{id}",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationRDSselect"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationRDSselect"
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "Export": {
              "Name": "sls-RDSconnection-dev-ServerlessDeploymentBucketName"
            }
          },
          "RDSTestconnectionLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "RDSTestconnectionLambdaVersionY311Bx4qGCATXzb5iQftW0YAqwdxZT6FLwKQj4uEUo"
            },
            "Export": {
              "Name": "sls-RDSconnection-dev-RDSTestconnectionLambdaFunctionQualifiedArn"
            }
          },
          "RDScreateLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "RDScreateLambdaVersionCo0beIkw66kGqpAjRybSqS7Fh9AiNsMOzVIF1ds3gM"
            },
            "Export": {
              "Name": "sls-RDSconnection-dev-RDScreateLambdaFunctionQualifiedArn"
            }
          },
          "RDSupdateLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "RDSupdateLambdaVersionbWbjE1tmhlVmsVcMQg1AJjQKgwKkmsWNzV8SVms"
            },
            "Export": {
              "Name": "sls-RDSconnection-dev-RDSupdateLambdaFunctionQualifiedArn"
            }
          },
          "RDSdeleteLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "RDSdeleteLambdaVersionw3SIjlyBor3BRbZOO14TQFRGeXE4JeWfe7vF93Cgds"
            },
            "Export": {
              "Name": "sls-RDSconnection-dev-RDSdeleteLambdaFunctionQualifiedArn"
            }
          },
          "RDSselectLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "RDSselectLambdaVersionsmpGPteDirfVVcAKGQnOx54IgtRGq3KWKMuBWOX4Q"
            },
            "Export": {
              "Name": "sls-RDSconnection-dev-RDSselectLambdaFunctionQualifiedArn"
            }
          },
          "HttpApiId": {
            "Description": "Id of the HTTP API",
            "Value": {
              "Ref": "HttpApi"
            },
            "Export": {
              "Name": "sls-RDSconnection-dev-HttpApiId"
            }
          },
          "HttpApiUrl": {
            "Description": "URL of the HTTP API",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "HttpApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  }
                ]
              ]
            },
            "Export": {
              "Name": "sls-RDSconnection-dev-HttpApiUrl"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      }
    },
    "pluginsData": {},
    "functions": {
      "RDSTestconnection": {
        "handler": "handlers/handlerRDSTestconnection.RDSTestconnection",
        "events": [
          {
            "httpApi": {
              "path": "/RDSconnection/RDSTestconnection",
              "method": "get"
            },
            "resolvedMethod": "GET",
            "resolvedPath": "/RDSconnection/RDSTestconnection"
          }
        ],
        "name": "RDSconnection-dev-RDSTestconnection",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "RDSTestconnectionLambdaVersionY311Bx4qGCATXzb5iQftW0YAqwdxZT6FLwKQj4uEUo"
      },
      "RDScreate": {
        "handler": "handlers/handlerRDScreate.RDScreate",
        "events": [
          {
            "httpApi": {
              "path": "/RDSconnection/RDScreate",
              "method": "post"
            },
            "resolvedMethod": "POST",
            "resolvedPath": "/RDSconnection/RDScreate"
          }
        ],
        "name": "RDSconnection-dev-RDScreate",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "RDScreateLambdaVersionCo0beIkw66kGqpAjRybSqS7Fh9AiNsMOzVIF1ds3gM"
      },
      "RDSupdate": {
        "handler": "handlers/handlerRDSupdate.RDSupdate",
        "events": [
          {
            "httpApi": {
              "path": "/RDSconnection/RDSupdate/{id}",
              "method": "put"
            },
            "resolvedMethod": "PUT",
            "resolvedPath": "/RDSconnection/RDSupdate/{id}"
          }
        ],
        "name": "RDSconnection-dev-RDSupdate",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "RDSupdateLambdaVersionbWbjE1tmhlVmsVcMQg1AJjQKgwKkmsWNzV8SVms"
      },
      "RDSdelete": {
        "handler": "handlers/handlerRDSdelete.RDSdelete",
        "events": [
          {
            "httpApi": {
              "path": "/RDSconnection/RDSdelete/{id}",
              "method": "delete"
            },
            "resolvedMethod": "DELETE",
            "resolvedPath": "/RDSconnection/RDSdelete/{id}"
          }
        ],
        "name": "RDSconnection-dev-RDSdelete",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "RDSdeleteLambdaVersionw3SIjlyBor3BRbZOO14TQFRGeXE4JeWfe7vF93Cgds"
      },
      "RDSselect": {
        "handler": "handlers/handlerRDSselect.RDSselect",
        "events": [
          {
            "httpApi": {
              "path": "/RDSconnection/RDSselect/{id}",
              "method": "get"
            },
            "resolvedMethod": "GET",
            "resolvedPath": "/RDSconnection/RDSselect/{id}"
          }
        ],
        "name": "RDSconnection-dev-RDSselect",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "RDSselectLambdaVersionsmpGPteDirfVVcAKGQnOx54IgtRGq3KWKMuBWOX4Q"
      }
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "service": "RDSconnection",
      "frameworkVersion": "3",
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      }
    },
    "layers": {},
    "isDashboardMonitoringPreconfigured": false,
    "artifact": "/Users/federicotomadin/Projects/Serverless/7-RDSconnection/.serverless/RDSconnection.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/RDSconnection/dev/1667180880605-2022-10-31T01:48:00.605Z",
    "artifact": "RDSconnection.zip"
  }
}