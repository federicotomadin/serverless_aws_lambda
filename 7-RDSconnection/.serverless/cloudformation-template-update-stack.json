{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "ServerlessDeploymentBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        }
      }
    },
    "ServerlessDeploymentBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "ServerlessDeploymentBucket"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Effect": "Deny",
              "Principal": "*",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "/*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      }
                    ]
                  ]
                }
              ],
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": false
                }
              }
            }
          ]
        }
      }
    },
    "RDSTestconnectionLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/RDSconnection-dev-RDSTestconnection"
      }
    },
    "RDScreateLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/RDSconnection-dev-RDScreate"
      }
    },
    "RDSupdateLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/RDSconnection-dev-RDSupdate"
      }
    },
    "RDSdeleteLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/RDSconnection-dev-RDSdelete"
      }
    },
    "RDSselectLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/RDSconnection-dev-RDSselect"
      }
    },
    "IamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "RDSconnection",
                  "dev",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/RDSconnection-dev*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/RDSconnection-dev*:*:*"
                    }
                  ]
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "RDSconnection",
              "dev",
              {
                "Ref": "AWS::Region"
              },
              "lambdaRole"
            ]
          ]
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
              ]
            ]
          }
        ]
      }
    },
    "RDSTestconnectionLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/RDSconnection/dev/1667180880605-2022-10-31T01:48:00.605Z/RDSconnection.zip"
        },
        "Handler": "handlers/handlerRDSTestconnection.RDSTestconnection",
        "Runtime": "nodejs12.x",
        "FunctionName": "RDSconnection-dev-RDSTestconnection",
        "MemorySize": 1024,
        "Timeout": 6,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "VpcConfig": {
          "SecurityGroupIds": [
            "sg-0e4b79a9df071750a"
          ],
          "SubnetIds": [
            "subnet-019d6c9ee81874df1",
            "subnet-0171b26d142e662b5",
            "subnet-027f0bc4ab1959995",
            "subnet-0a39ee4236cf5741f",
            "subnet-0e3e0092806791c49",
            "subnet-0f3a94a7f4efedfa5"
          ]
        }
      },
      "DependsOn": [
        "RDSTestconnectionLogGroup"
      ]
    },
    "RDScreateLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/RDSconnection/dev/1667180880605-2022-10-31T01:48:00.605Z/RDSconnection.zip"
        },
        "Handler": "handlers/handlerRDScreate.RDScreate",
        "Runtime": "nodejs12.x",
        "FunctionName": "RDSconnection-dev-RDScreate",
        "MemorySize": 1024,
        "Timeout": 6,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "VpcConfig": {
          "SecurityGroupIds": [
            "sg-0e4b79a9df071750a"
          ],
          "SubnetIds": [
            "subnet-019d6c9ee81874df1",
            "subnet-0171b26d142e662b5",
            "subnet-027f0bc4ab1959995",
            "subnet-0a39ee4236cf5741f",
            "subnet-0e3e0092806791c49",
            "subnet-0f3a94a7f4efedfa5"
          ]
        }
      },
      "DependsOn": [
        "RDScreateLogGroup"
      ]
    },
    "RDSupdateLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/RDSconnection/dev/1667180880605-2022-10-31T01:48:00.605Z/RDSconnection.zip"
        },
        "Handler": "handlers/handlerRDSupdate.RDSupdate",
        "Runtime": "nodejs12.x",
        "FunctionName": "RDSconnection-dev-RDSupdate",
        "MemorySize": 1024,
        "Timeout": 6,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "VpcConfig": {
          "SecurityGroupIds": [
            "sg-0e4b79a9df071750a"
          ],
          "SubnetIds": [
            "subnet-019d6c9ee81874df1",
            "subnet-0171b26d142e662b5",
            "subnet-027f0bc4ab1959995",
            "subnet-0a39ee4236cf5741f",
            "subnet-0e3e0092806791c49",
            "subnet-0f3a94a7f4efedfa5"
          ]
        }
      },
      "DependsOn": [
        "RDSupdateLogGroup"
      ]
    },
    "RDSdeleteLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/RDSconnection/dev/1667180880605-2022-10-31T01:48:00.605Z/RDSconnection.zip"
        },
        "Handler": "handlers/handlerRDSdelete.RDSdelete",
        "Runtime": "nodejs12.x",
        "FunctionName": "RDSconnection-dev-RDSdelete",
        "MemorySize": 1024,
        "Timeout": 6,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "VpcConfig": {
          "SecurityGroupIds": [
            "sg-0e4b79a9df071750a"
          ],
          "SubnetIds": [
            "subnet-019d6c9ee81874df1",
            "subnet-0171b26d142e662b5",
            "subnet-027f0bc4ab1959995",
            "subnet-0a39ee4236cf5741f",
            "subnet-0e3e0092806791c49",
            "subnet-0f3a94a7f4efedfa5"
          ]
        }
      },
      "DependsOn": [
        "RDSdeleteLogGroup"
      ]
    },
    "RDSselectLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/RDSconnection/dev/1667180880605-2022-10-31T01:48:00.605Z/RDSconnection.zip"
        },
        "Handler": "handlers/handlerRDSselect.RDSselect",
        "Runtime": "nodejs12.x",
        "FunctionName": "RDSconnection-dev-RDSselect",
        "MemorySize": 1024,
        "Timeout": 6,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "VpcConfig": {
          "SecurityGroupIds": [
            "sg-0e4b79a9df071750a"
          ],
          "SubnetIds": [
            "subnet-019d6c9ee81874df1",
            "subnet-0171b26d142e662b5",
            "subnet-027f0bc4ab1959995",
            "subnet-0a39ee4236cf5741f",
            "subnet-0e3e0092806791c49",
            "subnet-0f3a94a7f4efedfa5"
          ]
        }
      },
      "DependsOn": [
        "RDSselectLogGroup"
      ]
    },
    "RDSTestconnectionLambdaVersionY311Bx4qGCATXzb5iQftW0YAqwdxZT6FLwKQj4uEUo": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "RDSTestconnectionLambdaFunction"
        },
        "CodeSha256": "OmMaMiZNqQKkAD1RgFeU5xOhT3UkPQJc4s0hUUK1JGo="
      }
    },
    "RDScreateLambdaVersionCo0beIkw66kGqpAjRybSqS7Fh9AiNsMOzVIF1ds3gM": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "RDScreateLambdaFunction"
        },
        "CodeSha256": "OmMaMiZNqQKkAD1RgFeU5xOhT3UkPQJc4s0hUUK1JGo="
      }
    },
    "RDSupdateLambdaVersionbWbjE1tmhlVmsVcMQg1AJjQKgwKkmsWNzV8SVms": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "RDSupdateLambdaFunction"
        },
        "CodeSha256": "OmMaMiZNqQKkAD1RgFeU5xOhT3UkPQJc4s0hUUK1JGo="
      }
    },
    "RDSdeleteLambdaVersionw3SIjlyBor3BRbZOO14TQFRGeXE4JeWfe7vF93Cgds": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "RDSdeleteLambdaFunction"
        },
        "CodeSha256": "OmMaMiZNqQKkAD1RgFeU5xOhT3UkPQJc4s0hUUK1JGo="
      }
    },
    "RDSselectLambdaVersionsmpGPteDirfVVcAKGQnOx54IgtRGq3KWKMuBWOX4Q": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "RDSselectLambdaFunction"
        },
        "CodeSha256": "OmMaMiZNqQKkAD1RgFeU5xOhT3UkPQJc4s0hUUK1JGo="
      }
    },
    "HttpApi": {
      "Type": "AWS::ApiGatewayV2::Api",
      "Properties": {
        "Name": "dev-RDSconnection",
        "ProtocolType": "HTTP"
      }
    },
    "HttpApiStage": {
      "Type": "AWS::ApiGatewayV2::Stage",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "StageName": "$default",
        "AutoDeploy": true,
        "DefaultRouteSettings": {
          "DetailedMetricsEnabled": false
        }
      }
    },
    "RDSTestconnectionLambdaPermissionHttpApi": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "RDSTestconnectionLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HttpApi"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "HttpApiIntegrationRDSTestconnection": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "RDSTestconnectionLambdaFunction",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0"
      }
    },
    "HttpApiRouteGetRdsconnectionRdstestconnection": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "GET /RDSconnection/RDSTestconnection",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationRDSTestconnection"
              }
            ]
          ]
        }
      },
      "DependsOn": "HttpApiIntegrationRDSTestconnection"
    },
    "RDScreateLambdaPermissionHttpApi": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "RDScreateLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HttpApi"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "HttpApiIntegrationRDScreate": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "RDScreateLambdaFunction",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0"
      }
    },
    "HttpApiRoutePostRdsconnectionRdscreate": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "POST /RDSconnection/RDScreate",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationRDScreate"
              }
            ]
          ]
        }
      },
      "DependsOn": "HttpApiIntegrationRDScreate"
    },
    "RDSupdateLambdaPermissionHttpApi": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "RDSupdateLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HttpApi"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "HttpApiIntegrationRDSupdate": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "RDSupdateLambdaFunction",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0"
      }
    },
    "HttpApiRoutePutRdsconnectionRdsupdateIdVar": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "PUT /RDSconnection/RDSupdate/{id}",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationRDSupdate"
              }
            ]
          ]
        }
      },
      "DependsOn": "HttpApiIntegrationRDSupdate"
    },
    "RDSdeleteLambdaPermissionHttpApi": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "RDSdeleteLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HttpApi"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "HttpApiIntegrationRDSdelete": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "RDSdeleteLambdaFunction",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0"
      }
    },
    "HttpApiRouteDeleteRdsconnectionRdsdeleteIdVar": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "DELETE /RDSconnection/RDSdelete/{id}",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationRDSdelete"
              }
            ]
          ]
        }
      },
      "DependsOn": "HttpApiIntegrationRDSdelete"
    },
    "RDSselectLambdaPermissionHttpApi": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "RDSselectLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HttpApi"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "HttpApiIntegrationRDSselect": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "RDSselectLambdaFunction",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0"
      }
    },
    "HttpApiRouteGetRdsconnectionRdsselectIdVar": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "GET /RDSconnection/RDSselect/{id}",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationRDSselect"
              }
            ]
          ]
        }
      },
      "DependsOn": "HttpApiIntegrationRDSselect"
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": {
        "Ref": "ServerlessDeploymentBucket"
      },
      "Export": {
        "Name": "sls-RDSconnection-dev-ServerlessDeploymentBucketName"
      }
    },
    "RDSTestconnectionLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "RDSTestconnectionLambdaVersionY311Bx4qGCATXzb5iQftW0YAqwdxZT6FLwKQj4uEUo"
      },
      "Export": {
        "Name": "sls-RDSconnection-dev-RDSTestconnectionLambdaFunctionQualifiedArn"
      }
    },
    "RDScreateLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "RDScreateLambdaVersionCo0beIkw66kGqpAjRybSqS7Fh9AiNsMOzVIF1ds3gM"
      },
      "Export": {
        "Name": "sls-RDSconnection-dev-RDScreateLambdaFunctionQualifiedArn"
      }
    },
    "RDSupdateLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "RDSupdateLambdaVersionbWbjE1tmhlVmsVcMQg1AJjQKgwKkmsWNzV8SVms"
      },
      "Export": {
        "Name": "sls-RDSconnection-dev-RDSupdateLambdaFunctionQualifiedArn"
      }
    },
    "RDSdeleteLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "RDSdeleteLambdaVersionw3SIjlyBor3BRbZOO14TQFRGeXE4JeWfe7vF93Cgds"
      },
      "Export": {
        "Name": "sls-RDSconnection-dev-RDSdeleteLambdaFunctionQualifiedArn"
      }
    },
    "RDSselectLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "RDSselectLambdaVersionsmpGPteDirfVVcAKGQnOx54IgtRGq3KWKMuBWOX4Q"
      },
      "Export": {
        "Name": "sls-RDSconnection-dev-RDSselectLambdaFunctionQualifiedArn"
      }
    },
    "HttpApiId": {
      "Description": "Id of the HTTP API",
      "Value": {
        "Ref": "HttpApi"
      },
      "Export": {
        "Name": "sls-RDSconnection-dev-HttpApiId"
      }
    },
    "HttpApiUrl": {
      "Description": "URL of the HTTP API",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "HttpApi"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            }
          ]
        ]
      },
      "Export": {
        "Name": "sls-RDSconnection-dev-HttpApiUrl"
      }
    }
  }
}